# Default values for simple-docker-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: ghcr.io/odise/simple-docker-app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v0.0.37
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80
ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
env: []
#  - name: ENV_NAME
#    value: VALUE

mappedSecrets: {}
#  gcpExample:
#    backendType: gcpSecretsManager
#    # Project to use for GCP Secrets Manager (use the service account project by default)
#    projectId: hello-service-project-id
#    data:
#      # Key in GCP Secrets Manager (without projet and version)
#      - key: hello-service-password
#        # Key to use in Kubernetes secret (not the secret name, who is determined by metadata.name)
#        name: password
#        # If the secret is a valid JSON, try to get this property
#        property: value
#        # Version of the secret (default: 'latest')
#        version: 1
#        # If the secret is already encoded in base64, then sends it unchanged (default: false)
#        isBinary: false
#  systemManagerExample:
#    backendType: systemManager
#    # optional: specify role to assume when retrieving the data
#    roleArn: arn:aws:iam::123456789012:role/test-role
#    # optional: specify region
#    region: us-west-2
#    data:
#      # Can either be key+name or all keys from a given path or even both
#      # Order below is important. Values are fetched from SSM in the same order you put them here (top to bottom)
#      # This means that if a given key is found duplicate, the last value found has precedence
#      - key: /foo/name
#        name: variable-name
#      - path: /bar/
#        # optional: choose whether to scrape all child paths or not. Default is false
#        recursive: false

## Prometheus Exporter / Metrics
metrics:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/nginx-exporter
    tag: 0.9.0-debian-10-r153
    pullPolicy: IfNotPresent
    pullSecrets: []
  podAnnotations: {}
  securityContext:
    enabled: false
    runAsUser: 1001
  service:
    port: 9113
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9113"
  resources:
    ## Example:
    ## limits:
    ##    cpu: 100m
    ##    memory: 128Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 128Mi
    requests: {}
